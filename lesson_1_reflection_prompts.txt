How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff tool helps by showing the line and column numbers where the difference resides.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having access to the entire history of a file make it possible to the programmer to see all the changes made during the time, and also look for bugs in previous versions.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I think the problem in choosing manually when to create a commit is the risk of losing part of the work in case you have a prroblem in your local computer, like a software crash. The positive thing is that you can choose to make your commit considering logical changes in the code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    First of all, Git was made to control code, and its common to break the code of a program in different files. Google docs has its own version control, but i think it just works like a backup to the user, which always edit only one document at a time.

How can you use the commands git log and git diff to view the history of files?

    git log: Go to the repository directory, and simply type 'git log' to see thecommit history
	git diff: Type 'git diff' and the commit codes you want to compare. Its possible to type only the first four letters of the commit code

How might using version control make you more confident to make changes that
could break something?

    By using a version control system, i feel more secure to make changes in the code and know that if anything goes wrong  i can rollback the changes easily

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
